:root {
  --primary-color: #357b70;
}

* {
  box-sizing: border-box;
}

body {
  font-family: 'source sans pro', sans-serif;
  font-weight: 400;
  font-size: 16px;
  /* Sets the font size to 16px */
  line-height: 1.6;
  /* Sets the line-height to 1.6 */
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

a:link {
  color: var(--primary-color);
}

a:visited {
  color: #05676e;
}

a:hover,
a:focus {
  text-decoration: none;
}

a:active {
  color: #489c79;
}

.navigation-list__item--active {
  text-decoration: none;
}

.profile {
  max-width: 700px;
  margin: 0 auto;
}

.profile__portrait {
  float: left;
  max-width: 250px;
  /* you can always use height: auto; as a CSS rule on the image. This way, the height will automatically be set to a value that matches the correct ratio. */
  height: auto;
  margin-right: 40px;
  border-radius: 50%;
  margin-bottom: 10px;
}

table,
th,
td {
  border: 1px solid black;
  border-collapse: collapse;
  text-align: center;
  padding: 5px;
}

.profile-info {
  display: flex;
  flex-direction: column;
}

/*  If you don’t want a specific element of your content flowing around a floated element, you need to give that element the property clear and the value both, which will clear all floats, both right and left */
.page-footer {
  clear: both;
  display: flex;
  flex-direction: column;
  align-items: center;
  /* Try to understand better the three properties below */
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 100px;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}

.page-header__item:first-child {
  /* flex-grow, flex-shrink, flex-basis */
  flex: 0 0 100px;
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

section {
  margin: 10px;
}

/* start grid fallback */
.project-list__item {
  display: inline-block;
  width: 33%;
}
/* end grid fallback */

@supports (display: grid) {
  .project-list {
    display: grid;
    /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    /*It’s considered good practice to specify only one property, and this property is usually the columns property. This means the grid-template-rows: property defaults to auto */
    /* Instead of padding or grid-gap(obsolete) we use just "gap" */
    gap: 20px;
  }

  .project-list__item {
    background-color: lightgray;
    padding: 20px;
    width: auto;
    min-height: auto;
    margin: 0;
  }
}

.container-form {
  display: flex;
  justify-content: center;
}

.contact-form {
  display: flex;
  flex-direction: column;
  flex: 0 1 400px;
  max-width: 80%;
  margin-top: 40px;
  background-color: var(--primary-color);
  border: 1px solid rgba(0, 0, 0, 1);
  padding: 20px;
}

.standard-label {
  color: #fff;
  line-height: 30px;
}

.contact-form textarea {
  max-width: 100%;
}

@media all and (max-width: 750px) {
  .project-list {
    gap: 10px;
  }
  .project-list__item:last-child {
    grid-column: auto;
    grid-row: auto;
  }
  h1 {
    font-size: 22px;
  }
}

@media all and (max-width: 500px) {
  .project-list {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .project-list {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 650px) {
  .profile {
    width: 100%;
    display: grid;
    max-width: min-content;
    margin: auto;
    text-align: center;
  }
  .about-container {
    margin: 0 auto;
  }
  .profile__portrait {
    margin-right: 0;
  }
  table {
    margin: 0 auto;
  }
}

@media all and (max-width: 500px) {
  .profile {
    width: 100%;
    display: grid;
    max-width: min-content;
    margin: auto;
    text-align: center;
  }
  .profile__portrait {
    max-width: 170px;
    margin: 0 auto;
  }
  table {
    margin: 0 auto;
  }
}

.city-picture {
  max-width: 700px;
  margin: auto;
  margin-top: 10px;
}

/* @keyframes color-change {
  from{
    fill: #edc655;
  }
  to {
    fill: #76414;
  }
} */

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

/* .sun {
  animation: 4s color-change infinite alternate linear;
} */

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

/* .cloud-front {
  animation: 30s cloud-move infinite alternate linear;
} */

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: cloud-move-reverse 34s linear 0ms infinite alternate none;
}
